{"version":3,"sources":["components/Header.js","components/Tabela.js","components/FormValidator.js","components/PopUp.js","components/Formulario.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","href","TableHead","TableBody","props","linhas","autores","map","autor","index","key","nome","livro","preco","onClick","removeAutor","Tabela","this","Component","FormValidator","validacoes","state","validacao","valido","forEach","regra","campoValor","campo","toString","args","metodo","validador","validoQuando","isInvalid","message","mensagem","isValid","PopUp","exibeMensagem","status","msg","M","toast","html","classes","displayLength","Formulario","escutadorDeInput","event","target","name","value","setState","submitForm","valida","escutadorDeSubmit","stateInicial","filter","elem","min","max","htmlFor","id","type","onChange","App","posAtual","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34785d64.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Header () {\n    return(\n        <nav>\n            <div className=\"nav-wrapper indigo\">\n                <a href=\"/\" className=\"brand-logo hide-on-med-and-down\">CW Livros</a>\n                <ul className=\"right\">\n                <li><a href=\"/autores\">Autores</a></li>\n                <li><a href=\"/livros\">Livros</a></li>\n                <li><a href=\"/sobre\">Sobre</a></li>\n                </ul>\n            </div>\n        </nav>\n    );\n}","import React, {Component} from 'react';\n\nconst TableHead = () => {\n    return (\n        <thead>\n            <tr>\n                <th>Autores</th>\n                <th>Livros</th>\n                <th>Preços</th>\n            </tr>\n        </thead>\n    );\n}\n\nconst TableBody = props => {\n    const linhas = props.autores.map((autor, index) => {\n        return (\n            <tr key={index} >\n                <td>{autor.nome}</td>\n                <td>{autor.livro}</td>\n                <td>R$ {autor.preco}</td>\n                <td><button \n                    onClick={ () => {props.removeAutor(index)} }\n                    className=\"waves-effect waves-light btn indigo\" >\n                        Remover\n                </button></td>\n            </tr>\n        );\n    })\n\n    return (\n        <tbody>\n            {linhas}\n        </tbody>\n    );\n}\n\nclass Tabela extends Component{\n    render(){\n\n        const {autores, removeAutor} = this.props;\n\n        return (\n            <table className=\"highlight centered\">\n                <TableHead />\n                <TableBody autores={autores} removeAutor={removeAutor} />\n            </table>\n\n        );\n    }\n}\n\nexport default Tabela;","import validador from 'validator';\n\nexport default class FormValidator {\n\n    constructor(validacoes){\n        this.validacoes = validacoes;\n    }\n\n    valida(state){\n        let validacao = this.valido();\n\n        this.validacoes.forEach(regra => {\n            const campoValor = state[regra.campo.toString()];\n            const args = regra.args  || [];\n            const metodoValidacao = typeof regra.metodo === 'string' ? \n                validador[regra.metodo] : regra.metodo\n\n            if(metodoValidacao(campoValor, ...args, state) !== regra.validoQuando){\n                validacao[regra.campo] = {\n                    isInvalid: true,\n                    message: regra.mensagem\n                }\n                validacao.isValid = false;\n            }\n        });\n\n        return validacao;\n    }\n\n    valido() {\n        const validacao = {};\n\n        this.validacoes.map(regra => (\n            validacao[regra.campo] = {isInvalid: false, mensagem: ''}\n        ));\n\n        return {isValid: true, ...validacao};\n    }\n    \n    //PopUp.exibeMensagem('error', campo.message);\n\n}","import M from 'materialize-css';\n\nexport const PopUp = {\n    exibeMensagem : (status, msg) => {\n        \n        if(status === 'success'){\n            M.toast({\n                html: msg,\n                classes: 'green',\n                displayLength: 2000\n            })\n        }\n\n        if(status === 'error'){\n            M.toast({\n                html: msg,\n                classes: 'red',\n                displayLength: 2000\n            })\n        }\n    \n    }\n}","import React, {Component} from 'react';\nimport FormValidator from './FormValidator';\nimport {PopUp} from './PopUp';\n\nexport default class Formulario extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.validador = new FormValidator([\n            {\n                campo: 'nome',\n                metodo: 'isEmpty',\n                validoQuando: false,\n                mensagem: 'O campo nome é obrigatório!'\n            },\n            {\n                campo: 'livro',\n                metodo: 'isEmpty',\n                validoQuando: false,\n                mensagem: 'O campo livro é obrigatório!'\n            },\n            {\n                campo: 'preco',\n                metodo: 'isInt',\n                args: [{\n                    min: 0,\n                    max: 9999\n                }],\n                validoQuando: true,\n                mensagem: 'O campo preço é obrigatório!'\n            },\n        ]);\n\n        this.stateInicial = {\n            nome: '',\n            livro: '',\n            preco: '',\n            validacao: this.validador.valido(),\n        }\n\n        this.state = this.stateInicial; \n\n    }\n\n    escutadorDeInput = event => {\n        const {name, value} = event.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    submitForm = () => {\n        const validacao = this.validador.valida(this.state);\n\n        if (validacao.isValid) {\n            this.props.escutadorDeSubmit(this.state);\n            this.setState(this.stateInicial);\n        } else {\n            const {nome, livro, preco} = validacao;\n            const campos = [nome, livro, preco];\n\n            const camposInvalidos = campos.filter(elem => {\n                return elem.isInvalid;\n            });\n\n            camposInvalidos.forEach(campo => {\n                PopUp.exibeMensagem('error', campo.message);\n            });\n        }\n    }\n\n    render(){\n\n        const {nome, livro, preco} = this.state;\n\n        return(\n            <form>\n                <div className=\"row\">\n                    <div className=\"input-field col s4\" >\n                        <label htmlFor=\"nome\">Nome</label>\n                        <input\n                            className=\"validate\"\n                            id=\"nome\"\n                            type=\"text\"\n                            name=\"nome\"\n                            value={nome}\n                            onChange={this.escutadorDeInput} />\n                    </div>\n                    <div className=\"input-field col s4\" >\n                        <label htmlFor=\"livro\">Livro</label>\n                        <input\n                            className=\"validate\"\n                            id=\"livro\"\n                            type=\"text\"\n                            name=\"livro\"\n                            value={livro}\n                            onChange={this.escutadorDeInput} /> \n                    </div>\n                    <div className=\"input-field col s4\" >\n                        <label htmlFor=\"preco\">Preço</label>\n                        <input\n                            className=\"validate\"\n                            id=\"preco\"\n                            type=\"number\"\n                            name=\"preco\"\n                            value={preco}\n                            onChange={this.escutadorDeInput} />\n                    </div>\n                    \n                    <button \n                        type=\"button\"\n                        onClick={this.submitForm} \n                        className=\"waves-effect waves-light btn indigo\" > \n                        <i className=\"material-icons right\">send</i> \n                        Salvar\n                    </button>\n                    \n                </div>\n            </form>\n        );\n    }\n\n}\n","import React, {Component, Fragment}  from 'react';\nimport router from 'react-router-dom';\n\nimport 'materialize-css/dist/css/materialize.min.css';\nimport './App.css';\n\nimport Header from './components/Header';\nimport Tabela from './components/Tabela';\nimport Form from './components/Formulario';\nimport {PopUp} from './components/PopUp';\n\nclass App extends Component {\n\n  state = {\n    autores: [\n      {\n        nome: 'Paulo',\n        livro: 'React',\n        preco: '1000'\n      },\n      {\n        nome: 'Daniel',\n        livro: 'Java',\n        preco: '99'\n      },\n      {\n        nome: 'Marcos',\n        livro: 'Design',\n        preco: '150'\n      },\n      {\n        nome: 'Bruno',\n        livro: 'DevOps',\n        preco: '100'\n      }\n    ],\n  };\n  \n  removeAutor = index => {\n    const {autores} = this.state;\n    this.setState(\n      {\n        autores: autores.filter((autor, posAtual) => {\n          return posAtual !== index;\n        }),\n      }\n    );\n    PopUp.exibeMensagem('success', \"Autor removido com sucesso!\");\n  }\n\n  escutadorDeSubmit = autor => {\n    this.setState({\n        autores:[...this.state.autores, autor]\n    });\n    PopUp.exibeMensagem('success', \"Autor incluído com sucesso!\");\n  }\n\n  render(){\n    return (\n      <Fragment>\n        <Header />\n        <br />\n        <div className=\"container\">\n          <h1>CW Livros</h1>\n          <Form escutadorDeSubmit={this.escutadorDeSubmit} />\n          <br />\n          <Tabela autores={this.state.autores} removeAutor={this.removeAutor} />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}